{"version":3,"sources":["App.js","index.js"],"names":["App","useState","locations","setLocations","cows","setCows","ore","setOre","gold","setGold","valk","setValk","jarl","setJarl","popLocations","useCallback","bag","startingLocations","JSON","parse","stringify","Data","startingBag","startingPlunderBag","forEach","location","i","plunder","plunderType","splice","randomNumber","length","plunder_arr","push","filter","item","min","max","r","Math","random","floor","useEffect","className","map","l","name","substring","toUpperCase","p","alt","src","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA0FeA,MAtFf,WAAgB,IAAD,EACqBC,mBAAS,MAD9B,mBACNC,EADM,KACKC,EADL,OAEWF,mBAAS,MAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGSJ,mBAAS,MAHlB,mBAGNK,EAHM,KAGDC,EAHC,OAIWN,mBAAS,MAJpB,mBAINO,EAJM,KAIAC,EAJA,OAKWR,mBAAS,MALpB,mBAKNS,EALM,KAKAC,EALA,OAMWV,mBAAS,MANpB,mBAMNW,EANM,KAMAC,EANA,KAQPC,EAAeC,uBAAY,WAC/B,IAyBoBC,EAzBdC,EAAoBC,KAAKC,MAC7BD,KAAKE,UAAUC,EAAKJ,oBAEhBK,EAAW,YAAOD,EAAKE,oBAE7BN,EAAkBO,SAAQ,SAACC,GACzB,IAAK,IAAIC,EAAID,EAASE,QAASD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAcN,EAAYO,OAC5BC,EAAa,EAAGR,EAAYS,QAC5B,GAEFN,EAASO,YAAYC,KAAKL,EAAY,QAG1CzB,EAAa,YAAIc,IAYjBZ,GADoBW,EAVPM,GAWDY,QAAO,SAAAC,GAAI,MAAa,QAATA,KAAgBJ,QAC3CxB,EAAOS,EAAIkB,QAAO,SAAAC,GAAI,MAAa,QAATA,KAAgBJ,QAC1CtB,EAAQO,EAAIkB,QAAO,SAAAC,GAAI,MAAa,SAATA,KAAiBJ,QAC5CpB,EAAQK,EAAIkB,QAAO,SAAAC,GAAI,MAAa,SAATA,KAAiBJ,QAC5ClB,EAAQG,EAAIkB,QAAO,SAAAC,GAAI,MAAa,SAATA,KAAiBJ,UAd3C,IAIH,SAASD,EAAaM,EAAKC,GACzB,IAAMC,EAAIC,KAAKC,UAAYH,EAAMD,GAAOA,EACxC,OAAOG,KAAKE,MAAMH,GAWpB,OAfAI,qBAAU,kBAAM5B,MAAgB,CAACA,IAgB/B,gCACE,iFACA,sBAAK6B,UAAU,QAAf,UACGzC,GACCA,EAAU6B,OAAS,GACnB7B,EAAU0C,KAAI,SAACnB,EAAUoB,GAAX,OACZ,sBAAyBF,UAAS,sBAAiBlB,EAASqB,MAA5D,UACE,sBAAKH,UAAU,WAAf,UACGlB,EAASqB,KACPC,UAAU,EAAGtB,EAASqB,KAAKf,OAAS,GACpCiB,cACH,qBAEEL,UAAU,yBAFZ,SAIGlB,EAASE,SAJZ,wBACwBkB,MALKpB,EAASqB,MAWvCrB,EAASO,aACRP,EAASO,YAAYY,KAAI,SAACjB,EAASsB,GAAV,OACvB,qBACEN,UAAS,kBAAahB,GAEtBuB,IAAKvB,EACLwB,IAAG,eAAUxB,EAAV,SAFEF,EAASqB,KAAO,IAAMG,QAhBzBxB,EAASqB,SAuBvB,sBAAKH,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,iCACA,sBAAKA,UAAU,iBAAf,wBAA4CvC,KAC5C,sBAAKuC,UAAU,WAAf,kBAAgCrC,KAChC,sBAAKqC,UAAU,YAAf,mBAAkCnC,KAClC,sBAAKmC,UAAU,YAAf,uBAAsCjC,KACtC,sBAAKiC,UAAU,YAAf,mBAAkC/B,KAClC,wBAAQwC,QAAS,kBAAMtC,KAAvB,kCC9EVuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.1a362f8d.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./App.css\";\r\nimport Data from \"./data.json\";\r\n\r\nfunction App() {\r\n  const [locations, setLocations] = useState(null);\r\n  const [cows, setCows] = useState(null);\r\n  const [ore, setOre] = useState(null);\r\n  const [gold, setGold] = useState(null);\r\n  const [valk, setValk] = useState(null);\r\n  const [jarl, setJarl] = useState(null);\r\n\r\n  const popLocations = useCallback(() => {\r\n    const startingLocations = JSON.parse(\r\n      JSON.stringify(Data.startingLocations)\r\n    );\r\n    const startingBag = [...Data.startingPlunderBag];\r\n\r\n    startingLocations.forEach((location) => {\r\n      for (let i = location.plunder; i > 0; i--) {\r\n        let plunderType = startingBag.splice(\r\n          randomNumber(1, startingBag.length),\r\n          1\r\n        );\r\n        location.plunder_arr.push(plunderType[0]);\r\n      }\r\n    });\r\n    setLocations([...startingLocations]);\r\n    countPlunder(startingBag);\r\n  }, []);\r\n\r\n  useEffect(() => popLocations(), [popLocations]);\r\n\r\n  function randomNumber(min, max) {\r\n    const r = Math.random() * (max - min) + min;\r\n    return Math.floor(r);\r\n  }\r\n\r\n  function countPlunder(bag) {\r\n    setCows(bag.filter(item => item === 'cow').length)\r\n    setOre(bag.filter(item => item === 'ore').length)\r\n    setGold(bag.filter(item => item === 'gold').length)\r\n    setValk(bag.filter(item => item === 'valk').length)\r\n    setJarl(bag.filter(item => item === 'jarl').length)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>Raiders of the North Sea Plunder Randomizer</header>\r\n      <div className=\"board\">\r\n        {locations &&\r\n          locations.length > 0 &&\r\n          locations.map((location, l) => (\r\n            <div key={location.name} className={`plunderArea ${location.name}`}>\r\n              <div className=\"location\" key={location.name}>\r\n                {location.name\r\n                  .substring(0, location.name.length - 1)\r\n                  .toUpperCase()}\r\n                <div\r\n                  key={`plunder-count-${l}`}\r\n                  className=\"location-plunder-count\"\r\n                >\r\n                  {location.plunder}\r\n                </div>\r\n              </div>\r\n              {location.plunder_arr &&\r\n                location.plunder_arr.map((plunder, p) => (\r\n                  <img\r\n                    className={`plunder ${plunder}`}\r\n                    key={location.name + \"-\" + p}\r\n                    alt={plunder}\r\n                    src={`/img/${plunder}.png`}\r\n                  />\r\n                ))}\r\n            </div>\r\n          ))}\r\n        <div className=\"plunderBag\">\r\n          <div className=\"plunderbag-title\">Plunder left in bag</div>\r\n          <div className=\"livestockCount\">Livestock: {cows}</div>\r\n          <div className=\"oreCount\">Ore: {ore}</div>\r\n          <div className=\"goldCount\">Gold: {gold}</div>\r\n          <div className=\"valkCount\">Valkyrie: {valk}</div>\r\n          <div className=\"jarlCount\">Jarl: {jarl}</div>\r\n          <button onClick={() => popLocations()}>Randomize!</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}